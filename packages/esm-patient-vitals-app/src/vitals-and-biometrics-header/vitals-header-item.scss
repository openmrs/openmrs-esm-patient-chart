@use '@carbon/colors';
@use '@carbon/type';
@use '@carbon/layout';
@use '@openmrs/esm-styleguide/src/vars' as *;

.container {
  display: flex;
  flex-flow: row wrap;
  flex-direction: column;
  margin: layout.$spacing-03 0 0;
  min-inline-size: max-content;
}

.abnormal-value {
  border: solid 1px colors.$orange-20-hover;
  background-color: colors.$orange-10;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: fit-content;
  gap: layout.$spacing-02;
  padding: layout.$spacing-02;
}

.critical-value {
  @extend .abnormal-value;
  border: 1px solid colors.$red-60;
  background-color: colors.$red-20;
}

.label-container {
  flex-grow: 0;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  display: flex;
  gap: layout.$spacing-02;
  padding: 0;
}

.value-container {
  @extend .label-container;
  margin-top: layout.$spacing-02;
}

.label {
  @include type.type-style('label-01');
  color: $text-02;
}

.danger-icon {
  color: $danger;
  height: layout.$spacing-02;
  width: layout.$spacing-02;
}

.value {
  @include type.type-style('body-compact-02');
}

.units {
  @include type.type-style('body-compact-01');
  color: $text-02;
}

.pad-right {
  margin-right: layout.$spacing-01;
}

.critically-low,
.critically-high,
.low,
.high {
  &::after {
    @include type.type-style('heading-compact-01');
    color: $text-02;
  }
}

.arrow {
  color: colors.$gray-100;
  font-weight: 500;
}

.low::after {
  @extend .arrow;
  content: ' ↓';
}

.critically-low::after {
  @extend .arrow;
  content: ' ↓↓';
}

.high::after {
  @extend .arrow;
  content: ' ↑';
}

.critically-high::after {
  @extend .arrow;
  content: ' ↑↑';
}
