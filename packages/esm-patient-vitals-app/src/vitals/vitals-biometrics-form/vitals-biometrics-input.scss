@use '@carbon/styles/scss/spacing';
@use '@carbon/styles/scss/type';
@use '@carbon/styles/scss/colors';
@import '~@openmrs/esm-styleguide/src/vars';

.label01 {
  @include type.type-style("label-01");
}

.bodyLong01 {
  @include type.type-style("body-01");
}

.productiveHeading04 {
  @include type.type-style("heading-04");
}

.inputContainer {
  width: 11.625rem;
  border-bottom: 1px solid $ui-04;
  margin-bottom: spacing.$spacing-05;
}

.vitalsBiometricInputLabel01 {
  @extend .label01;
  color: $text-02;
  margin-bottom: spacing.$spacing-03;
}

.textInput {
  border: none;
  @extend .productiveHeading04;
  text-align: center;
  padding: 0;
  color: $ui-05;

  :global(.cds--number input[type="number"]) {
    border: none !important;
    text-align: center;
    @include type.type-style('heading-04');
    font-family: ibm plex sans,system-ui,-apple-system,BlinkMacSystemFont,'.sfnstext-regular',sans-serif;
    min-width: auto !important;
  }

  :global(.cds--number--nosteppers input[type="number"]) {
    padding-right: 1rem !important;
  }
}

.textInputContainer {
  @extend .productiveHeading04;
  height: 4.875rem;
  display: flex;
  justify-content: center;
  flex-direction: column;
  text-align: center;
  padding: spacing.$spacing-03;
  color: $text-02;
  background-color: $ui-01;

  &.focused {
    border: 2px solid colors.$blue-60;

    input {
      outline: none !important;
    }

    input[data-invalid]:not(:focus) {
      outline: none;
    }

    svg {
      display: none;
    }
  }
}

:global(.omrs-breakpoint-lt-desktop) .textInputContainer {
  background-color: $ui-02;
}

.textInputContainer {
  &:global(.red) {
    background-color: colors.$red-20;

    input {
      background-color: colors.$red-20;
    }
  }
  &:global(.green) {
    background-color: colors.$green-20;

    input {
      background-color: colors.$green-20;
    }
  }
  &:global(.yellow) {
    background-color: colors.$yellow-10;
     input {
      background-color: colors.$yellow-10;
     }
  }
}

.textInput {
  svg {
    display: none;
  }

  input[data-invalid]:not(:focus) {
    outline: none !important;
  }
}
.textarea {
  border: none;
  @extend .bodyLong01;
  text-align: left;

  textarea {
    border-bottom: none;
  }
}

.centerDiv {
  display: flex;
  flex-direction: row;
  align-items: center;
  text-align: center;
  margin: 0;
  padding: 0;
}

.unitName {
  @include type.type-style('body-compact-01');
  color: $text-02;
  margin-top: spacing.$spacing-03;
}

.disabledInput {
  background-color: $ui-01 !important;

  :global(.cds--number input[type="number"]) {
    background-color: $ui-01 !important;
  }
}

.danger {
  color: $danger;
}

.layer {
  width: 100%;
}

.labelAndIcons {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.invalidInput {
  border: 2px solid $danger;
}

.invalidInputIcon {
  svg {
    color: $danger;
  }
}

.critical-value {
  background-color: colors.$red-10;
  .textInput {
    svg {
      display: none;
    }

    input {
      background-color: colors.$red-10;
    }

    input[data-invalid]:not(:focus) {
      outline: none;
    }

  }
}

.critically-low, .critically-high, .low, .high {
  &::after {
    @include type.type-style('heading-compact-01');
    color: $text-02;
  }
}

.low::after {
  content: " ↓";
}

.critically-low::after {
  content: " ↓↓";
}

.high::after {
  content: " ↑";
}

.critically-high::after {
  content: " ↑↑";
}


.inputInTabletView {
  &.isCriticalInput {
    .textInputContainer {
      background-color: colors.$red-20;

      .textInput {
        input {
          background-color: colors.$red-20;
          outline: none;
        }
      }
    }
  }
}
